version: 2.1

jobs:
  setup:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |
            echo "Installing necessary tools."
            pip install -U pip setuptools wheel

  build:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run linting
          command: flake8 .

  test1:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Install dependencies and run specific tests
          command: |
            pip install -r requirements.txt
            python -m unittest tests/test_module1.py

  test2:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Install dependencies and run specific tests
          command: |
            pip install -r requirements.txt
            python -m unittest tests/test_module2.py

  deploy:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Deploy Application
          command: |
            echo "Deploying application to production server."
            # Aquí puedes añadir el script de despliegue real, por ejemplo:
            # scp files your_production_server:/path/to/deploy

  cleanup:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/my_python_project
    steps:
      - checkout
      - run:
          name: Cleanup resources
          command: |
            echo "Removing temporary files."
            rm -rf temp/

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test1:
          requires:
            - build
      - test2:
          requires:
            - build
      - cleanup:
          requires:
            - test1
            - test2

  deploy_workflow:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - deploy:
          requires:
            - build
      - cleanup:
          requires:
            - deploy
